---
interface Props {
  url: string;
  dimensions: number[];
  fullscreen?: boolean;
}

function generateSrcSet(url: string, dimensions: number[], format: string) {
  return dimensions
    .map((width) => `${url}?w=${width}&fm=${format} ${width}w`)
    .join(", ");
}

const { url, dimensions, fullscreen } = Astro.props;
---

<picture class:list="">
  <!-- WebP format -->
  <source
    type="image/webp"
    srcset={generateSrcSet(url, dimensions, "webp")}
    sizes="(max-width: 640px) 100vw, (max-width: 1200px) 50vw, 33vw"
  />

  <!-- Default fallback image -->
  <img
    src={`${url}?w=${dimensions[0]}`}
    srcset={generateSrcSet(url, dimensions, "jpg")}
    sizes="(max-width: 640px) 100vw, (max-width: 1200px) 50vw, 33vw"
    alt="Responsive image"
    style="width: 100%; height: auto; object-fit: cover;"
    loading="lazy"
    decoding="async"
  />
</picture>

<style>
  .fullscreen {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1000;
    max-width: 90%;
    max-height: 90%;
    overflow: auto;
    border-radius: 4px;
  }
</style>
